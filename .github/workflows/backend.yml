name: backend

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref_protected && github.run_id || github.event.pull_request.number }}

permissions: # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  test_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: ["8.0.x"]
    steps:
      # See https://docs.stepsecurity.io/harden-runner/getting-started/ for instructions on
      # configuring harden-runner and identifying allowed endpoints.
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            *.actions.githubusercontent.com:443
            aka.ms:443
            api.github.com:443
            api.nuget.org:443
            builds.dotnet.microsoft.com:443
            dc.services.visualstudio.com:443
            deb.debian.org:80
            github.com:443
            md-hdd-t032zjxllntc.z26.blob.storage.azure.net:443
            objects.githubusercontent.com:443
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup dotnet
        uses: actions/setup-dotnet@87b7050bc53ea08284295505d98d2aa94301e852 # v4.2.0
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Install ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@36c6454b5a2348e7794ba2d82a21506605921e3d # v3
      - name: Run coverage tests
        run: dotnet test Backend.Tests/Backend.Tests.csproj
        shell: bash
      - name: Upload coverage artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          if-no-files-found: error
          name: coverage
          path: Backend.Tests/coverage.cobertura.xml
          retention-days: 7
      - name: Development build
        run: dotnet build BackendFramework.sln
      - name: Release build
        run: dotnet publish BackendFramework.sln
      - name: Format check
        run: dotnet format --verify-no-changes

  upload_coverage:
    needs: test_build
    runs-on: ubuntu-latest
    steps:
      # See https://docs.stepsecurity.io/harden-runner/getting-started/ for instructions on
      # configuring harden-runner and identifying allowed endpoints.
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            cli.codecov.io:443
            github.com:443
            ingest.codecov.io:443
            storage.googleapis.com:443
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Download coverage artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: coverage
      - name: Upload coverage report
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: coverage.cobertura.xml
          flags: backend
          name: Backend

  docker_build:
    if: ${{ github.event.type }} == "PullRequest"
    runs-on: ubuntu-latest
    steps:
      # See https://docs.stepsecurity.io/harden-runner/getting-started/ for instructions on
      # configuring harden-runner and identifying allowed endpoints.
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          disable-sudo: true
          disable-file-monitoring: true
          egress-policy: block
          allowed-endpoints: >
            *.data.mcr.microsoft.com:443
            api.nuget.org:443
            archive.ubuntu.com:80
            dc.services.visualstudio.com:443
            deb.debian.org:80
            github.com:443
            mcr.microsoft.com:443
            security.ubuntu.com:80
      # For subfolders, currently a full checkout is required.
      # See: https://github.com/marketplace/actions/build-and-push-docker-images#path-context
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Build backend
        run: |
          deploy/scripts/build.py --components backend
        shell: bash
      - name: Image digest
        run: |
          docker image inspect combine_backend:latest -f '{{json .Id}}'
        shell: bash
