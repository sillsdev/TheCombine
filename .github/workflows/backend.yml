name: backend

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions: # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  test_build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        dotnet: ["6.0.x"]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            aka.ms:443
            api.nuget.org:443
            codecov.io:443
            dc.services.visualstudio.com:443
            dotnetcli.azureedge.net:443
            github.com:443
            storage.googleapis.com:443
            uploader.codecov.io:443
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Setup dotnet
        uses: actions/setup-dotnet@607fce577a46308457984d59e4954e075820f10a # v3.0.3
        with:
          dotnet-version: ${{ matrix.dotnet }}

      # Coverage.
      - name: run coverage tests
        run: dotnet test Backend.Tests/Backend.Tests.csproj
        shell: bash
      - name: Upload coverage report
        uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70 # v3.1.1
        with:
          files: Backend.Tests/coverage.cobertura.xml
          flags: backend
          name: Backend
          fail_ci_if_error: true

      # Development build.
      - run: dotnet build BackendFramework.sln

      # Release build.
      - run: dotnet publish BackendFramework.sln

      # Fmt.
      - run: dotnet tool install -g dotnet-format
      - run: dotnet-format --check

  CodeQL_build:
    permissions:
      actions: read # for github/codeql-action/init to get workflow details
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/autobuild to send a status report
    runs-on: ubuntu-20.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            aka.ms:443
            api.github.com:443
            api.nuget.org:443
            dc.services.visualstudio.com:443
            dotnetcli.azureedge.net:443
            github.com:443

      - name: Checkout repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      # Manually install .NET to work around:
      # https://github.com/github/codeql-action/issues/757
      - name: Setup .NET
        uses: actions/setup-dotnet@607fce577a46308457984d59e4954e075820f10a # v3.0.3
        with:
          dotnet-version: "6.0.x"
      - name: Initialize CodeQL
        uses: github/codeql-action/init@959cbb7472c4d4ad70cdfe6f4976053fe48ab394 # v2.1.37
        with:
          languages: csharp
      - name: Autobuild
        uses: github/codeql-action/autobuild@959cbb7472c4d4ad70cdfe6f4976053fe48ab394 # v2.1.37
      - name: Upload artifacts if build failed
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        if: ${{ failure() }}
        with:
          name: tracer-logs
          path: ${{ runner.temp }}/*.log
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@959cbb7472c4d4ad70cdfe6f4976053fe48ab394 # v2.1.37

  docker_build:
    runs-on: ubuntu-22.04
    #    if: ${{ github.event.type }} == "PullRequest"
    steps:
      # For subfolders, currently a full checkout is required.
      # See: https://github.com/marketplace/actions/build-and-push-docker-images#path-context
      - name: Harden Runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.nuget.org:443
            dc.services.visualstudio.com:443
            deb.debian.org:80
            github.com:443
            docker.io:443
            auth.docker.io:443
            registry-1.docker.io:443
            production.cloudflare.docker.com
            security.debian.org
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0
      - name: Build backend
        run: |
          deploy/scripts/build.py --components backend
        shell: bash
      - name: Image digest
        run: |
          docker image inspect combine_backend:latest -f '{{json .Id}}'
        shell: bash
