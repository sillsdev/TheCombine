name: frontend

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions: # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  lint_test_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      # See https://docs.stepsecurity.io/harden-runner/getting-started/ for instructions on
      # configuring harden-runner and identifying allowed endpoints.
      - name: Harden Runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            codecov.io:443
            github.com:443
            registry.npmjs.org:443
            storage.googleapis.com:443
            uploader.codecov.io:443
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run fmt-frontend-check
      - run: npm run lint

      # Coverage.
      - run: npm run test-frontend:coverage
        env:
          CI: true
      - name: Upload coverage report
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          files: coverage/clover.xml
          flags: frontend
          name: Frontend
          fail_ci_if_error: true

      # Release build.
      - run: npm run build

  docker_build:
    runs-on: ubuntu-latest
    if: ${{ github.event.type }} == "PullRequest"
    steps:
      # See https://docs.stepsecurity.io/harden-runner/getting-started/ for instructions on
      # configuring harden-runner and identifying allowed endpoints.
      - name: Harden Runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            auth.docker.io:443
            files.pythonhosted.org:443
            github.com:443
            production.cloudflare.docker.com:443
            pypi.org:443
            registry-1.docker.io:443
            registry.npmjs.org:443
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0
      - name: Build frontend
        run: |
          deploy/scripts/build.py --components frontend
        shell: bash
      - name: Image digest
        run: |
          docker image inspect combine_frontend:latest -f '{{json .Id}}'
        shell: bash
