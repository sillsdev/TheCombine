name: "Combine Build"
description: "Build Docker images for The Combine and push to AWS ECR"
inputs:
  tag_suffix:
    description: "Suffix for image tag"
    required: true
    default: ""
  image_repo:
    description: "Docker Image Repository"
    required: true
  aws_access_key_id:
    description: "Access key id for AWS ECR - must have read/write access"
    required: true
  aws_secret_access_key:
    description: "Password token for aws_access_key_id"
    required: true
  aws_default_region:
    description: "Default accessibility zone for AWS ECR images"
    required: true
outputs:
  image_tag:
    description: "Image Tag for docker images"
    value: ${{ steps.save_image_tag.outputs.image_tag }}
runs:
  using: "composite"
  steps:
    - name: Create Image Tag
      run: |
        echo "IMAGE_TAG="`node scripts/printVersion.js`${{ inputs.tag_suffix }} >> $GITHUB_ENV
      shell: bash

    - name: Save Image Tag
      id: save_image_tag
      run: echo "::set-output name=image_tag::${{ env.IMAGE_TAG }}"
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_default_region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Frontend
      uses: docker/build-push-action@v2
      with:
        context:
        push: true
        tags: ${{ inputs.image_repo }}/combine_frontend:${{ env.IMAGE_TAG }}

    - name: Build Backend
      uses: docker/build-push-action@v2
      with:
        context: Backend
        push: true
        tags: ${{ inputs.image_repo }}/combine_backend:${{ env.IMAGE_TAG }}

    - name: Build Maintenance
      uses: docker/build-push-action@v2
      with:
        context: maintenance
        push: true
        tags: ${{ inputs.image_repo }}/combine_maint:${{ env.IMAGE_TAG }}
