name: "Combine Build"
description: "Build a single Docker image for The Combine and push it to AWS ECR"
inputs:
  image_registry:
    description: "Docker Image Registry"
    required: true
  image_registry_alias:
    description: >
      Custom or default alias for AWS Public ECR registries.  Blank for AWS ECR Private registries.
      If the image_registry_alias is specified, include the '/' at the beginning of the string,
      e.g. /thecombine
    required: false
    default: ""
  aws_access_key_id:
    description: "Access key id for AWS ECR - must have read/write access"
    required: true
  aws_secret_access_key:
    description: "Password token for aws_access_key_id"
    required: true
  aws_default_region:
    description: "Default accessibility zone for AWS ECR images"
    required: true
  build_component:
    description: "Component to build"
    required: true
outputs:
  image_tag:
    description: "Image Tag for docker images"
    value: ${{ steps.save_image_tag.outputs.image_tag }}
runs:
  using: "composite"
  steps:
    - name: Create Image Tag
      run: |
        echo "IMAGE_TAG="`deploy/scripts/app_release.py --get` >> $GITHUB_ENV
      shell: bash

    - name: Save Image Tag
      id: save_image_tag
      run: echo "::set-output name=image_tag::${{ env.IMAGE_TAG }}"
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_default_region }}

    - name: Login to AWS ECR
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.image_registry }}
        username: ${{ inputs.aws_access_key_id }}
        password: ${{ inputs.aws_secret_access_key }}

    - name: Build The Combine
      run: |
        deploy/scripts/build.py --tag ${{ env.IMAGE_TAG }} --repo ${{ inputs.image_registry }}${{ inputs.image_registry_alias}}
      shell: bash
