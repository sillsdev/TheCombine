// This file was generated by `python scripts/split_dictionary.py -l es -t 1000`.

export default async function (letter?: string, exclude?: string[]) {
  if (!letter) {
    return (await import("resources/dictionaries/es/u.dic")).default;
  }

  const code = letter.toLocaleLowerCase()[0].charCodeAt(0);
  const excludeCodes = exclude?.map(l => l.toLocaleLowerCase()[0].charCodeAt(0))
  if (excludeCodes?.includes(code)) {
    return;
  }

  switch (code) {
    case 97:
      return (await import("resources/dictionaries/es/u97.dic")).default;
    case 98:
      return (await import("resources/dictionaries/es/u98.dic")).default;
    case 99:
      return (await import("resources/dictionaries/es/u99.dic")).default;
    case 100:
      return (await import("resources/dictionaries/es/u100.dic")).default;
    case 101:
      return (await import("resources/dictionaries/es/u101.dic")).default;
    case 102:
      return (await import("resources/dictionaries/es/u102.dic")).default;
    case 103:
      return (await import("resources/dictionaries/es/u103.dic")).default;
    case 104:
      return (await import("resources/dictionaries/es/u104.dic")).default;
    case 105:
      return (await import("resources/dictionaries/es/u105.dic")).default;
    case 108:
      return (await import("resources/dictionaries/es/u108.dic")).default;
    case 109:
      return (await import("resources/dictionaries/es/u109.dic")).default;
    case 110:
      return (await import("resources/dictionaries/es/u110.dic")).default;
    case 111:
      return (await import("resources/dictionaries/es/u111.dic")).default;
    case 112:
      return (await import("resources/dictionaries/es/u112.dic")).default;
    case 114:
      return (await import("resources/dictionaries/es/u114.dic")).default;
    case 115:
      return (await import("resources/dictionaries/es/u115.dic")).default;
    case 116:
      return (await import("resources/dictionaries/es/u116.dic")).default;
    case 118:
      return (await import("resources/dictionaries/es/u118.dic")).default;
    default:
      return;
    }
}
