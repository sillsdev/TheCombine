---
- name: Install pre-requisite packages
  apt:
    name: "{{ k8s_required_pkgs }}"

# Install k3s Kubernetes engine
- name: Install Kubernetes Engine
  include_tasks:
    file: k3s.yml
  when: not install_airgap_images

# Install from airgap images
- name: Install Kubernetes from Airgap Images
  include_tasks:
    file: k3s_airgap.yml
  when: install_airgap_images

- name: Get home directory for {{ k8s_user }}
  shell: >
    getent passwd {{ k8s_user }} | awk -F: '{ print $6 }'
  register: k8s_user_home
  changed_when: false

- name: Get user group id for {{ k8s_user }}
  shell: >
    getent passwd {{ k8s_user }} | awk -F: '{ print $4 }'
  register: k8s_user_group_id
  changed_when: false

- name: Create .kube directories
  file:
    path: "{{ item.home }}/.kube"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: 0700
  loop:
    - home: "{{ k8s_user_home.stdout }}"
      owner: "{{ k8s_user }}"
      group: "{{ k8s_user_group_id.stdout }}"
    - home: /root
      owner: root
      group: root

- name: Copy /etc/rancher/k3s/k3s.yaml to .kube/config
  shell: |
    cp /etc/rancher/k3s/k3s.yaml {{ item.home }}/.kube/config
    chown {{ item.owner }}:{{ item.group }} {{ item.home }}/.kube/config
    chmod 600 {{ item.home }}/.kube/config
  loop:
    - home: "{{ k8s_user_home.stdout }}"
      owner: "{{ k8s_user }}"
      group: "{{ k8s_user_group_id.stdout }}"
    - home: /root
      owner: root
      group: root

- name: List contexts
  command: kubectl --kubeconfig=/etc/rancher/k3s/k3s.yaml config get-contexts
  register: k3s_contexts

- name: Change context name from 'default'
  command: kubectl --kubeconfig=/etc/rancher/k3s/k3s.yaml config rename-context default {{ kubecfgdir }}
  when: k3s_contexts.stdout is regex("^\*? +default.*")

- name: Get home directory for {{ k8s_user }}
  shell: >
    getent passwd {{ k8s_user }} | awk -F: '{ print $6 }'
  register: k8s_user_home
  changed_when: false

- name: update profile
  lineinfile:
    state: present
    path: "{{ k8s_user_home.stdout }}/.profile"
    line: "export KUBECONFIG=${HOME}/.kube/config"
    mode: 0600
  when: ansible_connection == "local"

- name: Setup remote access to cluster
  include_tasks:
    file: k8s_remote_access.yml
  when: ansible_connection != "local"
