---
- name: Install pre-requisite packages
  apt:
    name: "{{ k8s_required_pkgs }}"

# configure kubernetes user
- name: Install Kubernetes Engine
  include_tasks:
    file: "{{ k8s_engine }}.yml"
  when: k8s_engine != "none"

- name: Create keyring directory if necessary
  file:
    path: /etc/apt/keyrings
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Download the Kubernetes public signing key
  shell:
    cmd: >
      curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
      | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Set signing key permissions
  file:
    name: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    mode: 0644
    state: file

- name: Add repository
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
    filename: kubernetes
    mode: 0644

- name: Install kubectl
  apt:
    name: kubectl

- name: Get home directory for {{ k8s_user }}
  shell: >
    getent passwd {{ k8s_user }} | awk -F: '{ print $6 }'
  register: k8s_user_home
  changed_when: false

- name: update profile
  lineinfile:
    state: present
    path: "{{ k8s_user_home.stdout }}/.profile"
    line: "export KUBECONFIG=${HOME}/.kube/config"
    mode: 0600
  when: ansible_connection == "local"

- name: Setup remote access to cluster
  include_tasks:
    file: k8s_remote_access.yml
  when: ansible_connection != "local"
