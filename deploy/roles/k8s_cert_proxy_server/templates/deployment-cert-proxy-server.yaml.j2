apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    combine-component: combine-cert-proxy
  name: combine-cert-proxy
  namespace: {{ cert_proxy_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      combine-component: combine-cert-proxy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        combine-component: combine-cert-proxy
    spec:
      serviceAccountName: {{ k8s_service_accounts.maintenance }}
      containers:
        - command: [ "/home/user/.local/bin/monitor.py" ]
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: {{ proxy_server_attr.aws_s3_access }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: {{ proxy_server_attr.aws_s3_access }}
            - name: AWS_ACCOUNT
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCOUNT
                  name: {{ proxy_server_attr.aws_s3_access }}
            - name: AWS_DEFAULT_REGION
              valueFrom:
                secretKeyRef:
                  key: AWS_DEFAULT_REGION
                  name: {{ proxy_server_attr.aws_s3_access }}
            - name: AWS_S3_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: AWS_S3_BUCKET
                  name: {{ proxy_server_attr.env_cert_proxy }}
            - name: CERT_PROXY_CERTIFICATES
              valueFrom:
                configMapKeyRef:
                  key: CERT_PROXY_CERTIFICATES
                  name: {{ proxy_server_attr.env_cert_proxy }}
            - name: CERT_PROXY_NAMESPACE
              value: {{ cert_proxy_namespace }}
          image: '{{ combine_image_maintenance }}'
{% if image_tag == "latest" %}
          imagePullPolicy: Always
{% else %}
          imagePullPolicy: IfNotPresent
{% endif %}
          name: combine-cert-proxy
          resources: {}
      restartPolicy: Always
{% if image_pull_secret is defined and image_pull_secret | length %}
      imagePullSecrets:
         - name: {{ image_pull_secret }}
{% endif %}
status: {}
