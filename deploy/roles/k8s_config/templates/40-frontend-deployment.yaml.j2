apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: frontend
  name: frontend
  namespace: {{ app_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: frontend
    spec:
      containers:
        - env:
            - name: CERT_ADDL_DOMAINS
              valueFrom:
                configMapKeyRef:
                  key: CERT_ADDL_DOMAINS
                  name: env-frontend
            - name: CERT_PROXY_DOMAINS
              valueFrom:
                configMapKeyRef:
                  key: CERT_PROXY_DOMAINS
                  name: env-frontend
            - name: CONFIG_CAPTCHA_REQD
              valueFrom:
                configMapKeyRef:
                  key: CONFIG_CAPTCHA_REQD
                  name: env-frontend
            - name: CONFIG_CAPTCHA_SITE_KEY
              valueFrom:
                configMapKeyRef:
                  key: CONFIG_CAPTCHA_SITE_KEY
                  name: env-frontend
            - name: CONFIG_USE_CONNECTION_URL
              valueFrom:
                configMapKeyRef:
                  key: CONFIG_USE_CONNECTION_URL
                  name: env-frontend
            - name: SERVER_NAME
              valueFrom:
                configMapKeyRef:
                  key: SERVER_NAME
                  name: env-frontend
            - name: ENV_HTTP_ONLY
              valueFrom:
                configMapKeyRef:
                  key: ENV_HTTP_ONLY
                  name: env-frontend
{% if http_only is not defined or not http_only %}
            - name: SSL_CERTIFICATE
              valueFrom:
                configMapKeyRef:
                  key: SSL_CERTIFICATE
                  name: env-frontend
            - name: SSL_PRIVATE_KEY
              valueFrom:
                configMapKeyRef:
                  key: SSL_PRIVATE_KEY
                  name: env-frontend
{% endif %}
          image: '{{ combine_image_frontend }}'
{% if image_tag == "latest" %}
          imagePullPolicy: Always
{% else %}
          imagePullPolicy: IfNotPresent
{% endif %}
          name: frontend
          ports:
            - containerPort: 80
            - containerPort: 443
          resources: {}
      restartPolicy: Always
{% if image_pull_secrets is defined and image_pull_secrets | length %}
      imagePullSecrets:
{% for secret in image_pull_secrets %}
         - name: {{ secret }}
{% endfor %}
{% endif %}
{% if node_site is defined and node_site | length %}
      nodeSelector:
        site: {{ node_site }}
{% endif %}
status: {}
