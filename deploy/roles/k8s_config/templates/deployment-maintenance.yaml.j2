apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    combine-component: maintenance
  name: maintenance
  namespace: {{ app_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      combine-component: maintenance
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        combine-component: maintenance
    spec:
      serviceAccountName: {{ k8s_service_accounts.maintenance }}
      containers:
        - command: [ "/bin/bash", "-c", "--" ]
          args: [ "while true; do sleep 86400; done;" ]
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: aws-s3-credentials
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: aws-s3-credentials
            - name: AWS_ACCOUNT
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCOUNT
                  name: aws-s3-credentials
            - name: AWS_DEFAULT_REGION
              valueFrom:
                secretKeyRef:
                  key: AWS_DEFAULT_REGION
                  name: aws-s3-credentials
            - name: aws_bucket
              valueFrom:
                configMapKeyRef:
                  key: aws_bucket
                  name: env-maintenance
            - name: db_files_subdir
              valueFrom:
                configMapKeyRef:
                  key: db_files_subdir
                  name: env-maintenance
            - name: backend_files_subdir
              valueFrom:
                configMapKeyRef:
                  key: backend_files_subdir
                  name: env-maintenance
            - name: combine_host
              valueFrom:
                configMapKeyRef:
                  key: combine_host
                  name: env-maintenance
            - name: wait_time
              valueFrom:
                configMapKeyRef:
                  key: wait_time
                  name: env-maintenance
            - name: max_backups
              valueFrom:
                configMapKeyRef:
                  key: max_backups
                  name: env-maintenance
            - name: backup_filter
              valueFrom:
                configMapKeyRef:
                  key: backup_filter
                  name: env-maintenance
          image: '{{ combine_image_maintenance }}'
{% if image_tag == "latest" %}
          imagePullPolicy: Always
{% else %}
          imagePullPolicy: IfNotPresent
{% endif %}
          name: maintenance
          resources: {}
      restartPolicy: Always
{% if image_pull_secret is defined and image_pull_secret | length %}
      imagePullSecrets:
         - name: {{ image_pull_secret }}
{% endif %}
{% if node_site is defined and node_site | length %}
      nodeSelector:
        site: {{ node_site }}
{% endif %}
status: {}
