---
##############################################################
# Playbook: playbook_kube_config.yml
#
# playbook_kube_config.yml configures the Kubernetes cluster to
# run The Combine.
#
##############################################################

- name: Setup TheCombine to run under Kubernetes
  hosts: server,qa,nuc
  become: no
  gather_facts: no

  vars_prompt:
    - name: combine_version
      prompt: "Enter Combine version to install"
      private: no

  vars:
    http_only: yes

  vars_files:
    - "vars/config_common.yml"
    - "vars/packages.yml"
    - "vars/vault_config.yml"
    # The aws_credentials allows us to use a different vault file to specify the
    # AWS credentials while testing.  By default, vars/aws.yml is used.  To
    # use a different file, such as _test_aws.yml, add the following to your
    # ansible-playbook command:
    #   -e "aws_credentials=_test_aws.yml"
    - "vars/{{ aws_credentials | default('aws.yml',true) }}"

  tasks:
    - name: Create The Combine Kubernetes cluster
      delegate_to: localhost
      block:
        # Normally, the list of "combine_namespaces" is only used for the
        # "app_namespace" on the NUC.  It is implemented as a list so that the
        # "combine-cert-proxy" namespace can be created on development servers.
        # (Namespaces are controlled by another group on the production cluster.)
        - name: Create Application Namespace
          import_role:
            name: k8s_namespace
          when: (create_namespaces | default([])) | length

        - name: Setup Service Accounts
          import_role:
            name: k8s_accounts
          tags:
            - k8s_accounts

        - name: Setup container registry credentials
          import_role:
            name: aws_login_job

        - name: Create Storage Class
          import_role:
            name: k8s_storage
          when:
            - k8s_storage_class is defined

        - name: Install cert-manager
          include_role:
            name: k8s_cert_manager
            apply:
              tags:
                - config
          when: '"cert_manager" in k8s_components'

        - name: Create Kubernetes Configuration Files
          import_role:
            name: k8s_config
