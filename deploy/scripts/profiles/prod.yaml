---
################################################
# Group specific configuration items
#
# Group: prod
################################################

# Frontend configuration items:
config_show_cert_expiration: false
config_analytics_write_key: "j9EeK4oURluRSIKbaXCBKBxGCnT2WahB"

# Live server accesses the following AWS services:
# S3:
#   - store SSL certificates for the NUCs
#   - store backups
# ECR:
#   - install container images
aws_s3_profile: s3_read_write
aws_ecr_profile: ecr_read_only

my_aws_profiles:
  - "{{ aws_s3_profile }}"
  - "{{ aws_ecr_profile }}"

# Define backup times (UTC)
backup_hour: "10"
backup_minute: "15"
# Maximum number of backups to keep on AWS S3 service
max_backups: "3"

################################################
# Configure Kubernetes cluster
################################################

# Specify which Kubernetes engine to install -
# one of k3s, or none.
k8s_engine: none
k8s_components: []

image_pull_secret: aws-login-credentials

create_namespaces: []
# k8s namespaces
app_namespace: thecombine
cert_proxy_namespace: combine-cert-proxy

#######################################
# k8s Upgrade strategy
#   Recreate - for the NUCs where they are updated offline
#   RollingUpdate - for the servers and qa which are available
#              during an update
k8s_update_strategy: Recreate

#######################################
# Ingress configuration
ingress_class: nginx
ingress_namespace: ingress-nginx

################################################
# WiFi access point settings
################################################
has_wifi: no
